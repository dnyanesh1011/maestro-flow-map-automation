# Name of your automated workflow
name: Run Maestro Tests

# Trigger: runs on a push to the main branch
on:
  push:
    branches: [ "main" ]

# Defines the jobs to be performed
jobs:
  run-android-tests:
    # Use the latest Ubuntu virtual machine
    runs-on: ubuntu-latest

    # Sequence of steps to execute
    steps:
      # 1. Checks out your repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Sets up Java (required for Android)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Sets up Node.js (to install Maestro)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Installs the Maestro CLI
      - name: Install Maestro
        run: npm install -g maestro-cli

      # 5. Run Maestro Tests on an Android Emulator
      # This action handles downloading the SDK, creating and starting an
      # emulator, and then runs your test script against it.
      - name: Run Maestro Test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # Specify the API level for the emulator
          api-level: 33
          
          # The command to run once the emulator is booted and ready
          script: maestro test --app-file google_map_app.apk Google_Maps_test.yaml
