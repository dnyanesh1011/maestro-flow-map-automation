# Name of your automated workflow
name: Run Maestro Tests

# Trigger: runs on a push to the main branch
on:
  push:
    branches: [ "main" ]

# Defines the jobs to be performed
jobs:
  run-android-tests:
    # Use a macOS runner for hardware acceleration
    runs-on: macos-latest

    # Sequence of steps to execute
    steps:
      # 1. Checks out your repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Sets up Java (required for Android)
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Sets up Node.js (to install Maestro)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Installs the Maestro CLI
      - name: Install Maestro
        run: npm install -g maestro-cli

      # 5. Run Maestro tests on an Android emulator
      - name: Run Tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # Set the Android API level (Android 14)
          api-level: 34

          # Use Google APIs for best compatibility
          target: google_apis

          # Match the emulator architecture to the ARM64 runner
          arch: arm64-v8a
          
          # Disable hardware acceleration to fix HVF error
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -accel off

          # Your test command pointing to the files in the root directory
          script: maestro test --app-file google_map_app.apk Google_Maps_test.yaml
